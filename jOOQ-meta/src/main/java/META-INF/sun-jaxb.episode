<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<bindings xmlns="http://java.sun.com/xml/ns/jaxb" if-exists="true" version="2.1">



    <bindings xmlns:tns="http://www.jooq.org/xsd/jooq-codegen-3.13.0.xsd" if-exists="true" scd="x-schema::tns">

        <schemaBindings map="false">

            <package name="org.jooq.meta.jaxb"/>

        </schemaBindings>

        <bindings if-exists="true" scd="tns:configuration">

            <class ref="org.jooq.meta.jaxb.Configuration"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:Jdbc">

            <class ref="org.jooq.meta.jaxb.Jdbc"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:Generator">

            <class ref="org.jooq.meta.jaxb.Generator"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:Properties">

            <class ref="org.jooq.meta.jaxb.Properties"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:Property">

            <class ref="org.jooq.meta.jaxb.Property"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:Strategy">

            <class ref="org.jooq.meta.jaxb.Strategy"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:Matchers">

            <class ref="org.jooq.meta.jaxb.Matchers"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:MatchersSchemasType">

            <class ref="org.jooq.meta.jaxb.MatchersSchemasType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:MatchersSchemaType">

            <class ref="org.jooq.meta.jaxb.MatchersSchemaType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:MatchersTablesType">

            <class ref="org.jooq.meta.jaxb.MatchersTablesType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:MatchersTableType">

            <class ref="org.jooq.meta.jaxb.MatchersTableType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:MatchersFieldsType">

            <class ref="org.jooq.meta.jaxb.MatchersFieldsType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:MatchersFieldType">

            <class ref="org.jooq.meta.jaxb.MatchersFieldType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:MatchersRoutinesType">

            <class ref="org.jooq.meta.jaxb.MatchersRoutinesType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:MatchersRoutineType">

            <class ref="org.jooq.meta.jaxb.MatchersRoutineType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:MatchersSequencesType">

            <class ref="org.jooq.meta.jaxb.MatchersSequencesType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:MatchersSequenceType">

            <class ref="org.jooq.meta.jaxb.MatchersSequenceType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:MatchersEnumsType">

            <class ref="org.jooq.meta.jaxb.MatchersEnumsType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:MatchersEnumType">

            <class ref="org.jooq.meta.jaxb.MatchersEnumType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:MatcherRule">

            <class ref="org.jooq.meta.jaxb.MatcherRule"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:Database">

            <class ref="org.jooq.meta.jaxb.Database"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:CatalogMappingsType">

            <class ref="org.jooq.meta.jaxb.CatalogMappingsType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:CatalogMappingType">

            <class ref="org.jooq.meta.jaxb.CatalogMappingType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:SchemaMappingsType">

            <class ref="org.jooq.meta.jaxb.SchemaMappingsType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:SchemaMappingType">

            <class ref="org.jooq.meta.jaxb.SchemaMappingType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:CustomTypes">

            <class ref="org.jooq.meta.jaxb.CustomTypes"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:EnumTypes">

            <class ref="org.jooq.meta.jaxb.EnumTypes"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:Embeddables">

            <class ref="org.jooq.meta.jaxb.Embeddables"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:ForcedTypes">

            <class ref="org.jooq.meta.jaxb.ForcedTypes"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:CustomType">

            <class ref="org.jooq.meta.jaxb.CustomType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:EnumType">

            <class ref="org.jooq.meta.jaxb.EnumType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:Embeddable">

            <class ref="org.jooq.meta.jaxb.Embeddable"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:EmbeddableFields">

            <class ref="org.jooq.meta.jaxb.EmbeddableFields"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:EmbeddableField">

            <class ref="org.jooq.meta.jaxb.EmbeddableField"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:ForcedType">

            <class ref="org.jooq.meta.jaxb.ForcedType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:Generate">

            <class ref="org.jooq.meta.jaxb.Generate"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:Target">

            <class ref="org.jooq.meta.jaxb.Target"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:Logging">

            <typesafeEnumClass ref="org.jooq.meta.jaxb.Logging"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:OnError">

            <typesafeEnumClass ref="org.jooq.meta.jaxb.OnError"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:MatcherTransformType">

            <typesafeEnumClass ref="org.jooq.meta.jaxb.MatcherTransformType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:ForcedTypeObjectType">

            <typesafeEnumClass ref="org.jooq.meta.jaxb.ForcedTypeObjectType"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:RegexFlag">

            <typesafeEnumClass ref="org.jooq.meta.jaxb.RegexFlag"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:Nullability">

            <typesafeEnumClass ref="org.jooq.meta.jaxb.Nullability"/>

        </bindings>

        <bindings if-exists="true" scd="~tns:GeneratedAnnotationType">

            <typesafeEnumClass ref="org.jooq.meta.jaxb.GeneratedAnnotationType"/>

        </bindings>

    </bindings>

</bindings>
