/*
 * This file is generated by jOOQ.
 */
package org.jooq.meta.firebird.rdb.tables;


import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.meta.firebird.rdb.DefaultSchema;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Rdb$generators extends TableImpl<Record> {

    private static final long serialVersionUID = -1247535669;

    /**
     * The reference instance of <code>RDB$GENERATORS</code>
     */
    public static final Rdb$generators RDB$GENERATORS = new Rdb$generators();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>RDB$GENERATORS.RDB$GENERATOR_NAME</code>.
     */
    public final TableField<Record, String> RDB$GENERATOR_NAME = createField("RDB$GENERATOR_NAME", org.jooq.impl.SQLDataType.CHAR(31), this, "");

    /**
     * The column <code>RDB$GENERATORS.RDB$GENERATOR_ID</code>.
     */
    public final TableField<Record, Short> RDB$GENERATOR_ID = createField("RDB$GENERATOR_ID", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>RDB$GENERATORS.RDB$SYSTEM_FLAG</code>.
     */
    public final TableField<Record, Short> RDB$SYSTEM_FLAG = createField("RDB$SYSTEM_FLAG", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>RDB$GENERATORS.RDB$DESCRIPTION</code>.
     */
    public final TableField<Record, String> RDB$DESCRIPTION = createField("RDB$DESCRIPTION", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>RDB$GENERATORS.RDB$SECURITY_CLASS</code>.
     */
    public final TableField<Record, String> RDB$SECURITY_CLASS = createField("RDB$SECURITY_CLASS", org.jooq.impl.SQLDataType.CHAR(31), this, "");

    /**
     * The column <code>RDB$GENERATORS.RDB$OWNER_NAME</code>.
     */
    public final TableField<Record, String> RDB$OWNER_NAME = createField("RDB$OWNER_NAME", org.jooq.impl.SQLDataType.CHAR(31), this, "");

    /**
     * The column <code>RDB$GENERATORS.RDB$INITIAL_VALUE</code>.
     */
    public final TableField<Record, Long> RDB$INITIAL_VALUE = createField("RDB$INITIAL_VALUE", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>RDB$GENERATORS.RDB$GENERATOR_INCREMENT</code>.
     */
    public final TableField<Record, Integer> RDB$GENERATOR_INCREMENT = createField("RDB$GENERATOR_INCREMENT", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>RDB$GENERATORS</code> table reference
     */
    public Rdb$generators() {
        this(DSL.name("RDB$GENERATORS"), null);
    }

    /**
     * Create an aliased <code>RDB$GENERATORS</code> table reference
     */
    public Rdb$generators(String alias) {
        this(DSL.name(alias), RDB$GENERATORS);
    }

    /**
     * Create an aliased <code>RDB$GENERATORS</code> table reference
     */
    public Rdb$generators(Name alias) {
        this(alias, RDB$GENERATORS);
    }

    private Rdb$generators(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private Rdb$generators(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$generators as(String alias) {
        return new Rdb$generators(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$generators as(Name alias) {
        return new Rdb$generators(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Rdb$generators rename(String name) {
        return new Rdb$generators(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Rdb$generators rename(Name name) {
        return new Rdb$generators(name, null);
    }
}
